{
  "address": "0xAfCfee27D0eF661cD42a1B0D7B488D181adA784f",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pollId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "closer",
          "type": "address"
        }
      ],
      "name": "PollClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pollId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "PollCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pollId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "optionIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "closePoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_question",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_options",
          "type": "string[]"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPolls",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPoll",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPollOptions",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        }
      ],
      "name": "getPollVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserPolls",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pollCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pollOptions",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "polls",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pollId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_optionIndex",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4f74c6ca5a67a4c75975899f6db45437195ede94bce40498d85776636b02054a",
  "receipt": {
    "to": null,
    "from": "0xF6275c2D0c2F8AcB8AD792289C6ebc8A7A5b6cCa",
    "contractAddress": "0xAfCfee27D0eF661cD42a1B0D7B488D181adA784f",
    "transactionIndex": 81,
    "gasUsed": "1305257",
    "logsBloom": "0x
    "blockHash": "0x6b547ab930786495730f4c24e019b22bf948c9672876ea2cee8494817ada44f7",
    "transactionHash": "0x4f74c6ca5a67a4c75975899f6db45437195ede94bce40498d85776636b02054a",
    "logs": [],
    "blockNumber": 7927596,
    "cumulativeGasUsed": "11055172",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7e8f35e20d6c6bdcee321ef2bba8dde1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"closer\",\"type\":\"address\"}],\"name\":\"PollClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"PollCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"optionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"closePoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPolls\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPoll\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPollOptions\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"}],\"name\":\"getPollVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserPolls\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pollCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pollOptions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"polls\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pollId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_optionIndex\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VotingPlatform.sol\":\"VotingPlatform\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VotingPlatform.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ncontract VotingPlatform {\\n    struct Poll {\\n        uint id;\\n        string question;\\n        bool isActive;\\n        address creator;\\n        uint[] votes;\\n        mapping(address => bool) hasVoted;\\n    }\\n\\n    uint public pollCount;\\n    mapping(uint => Poll) public polls;\\n    mapping(uint => string[]) public pollOptions;\\n\\n    event PollCreated(uint indexed pollId, string question, address creator);\\n    event Voted(uint indexed pollId, uint optionIndex, address voter, uint totalVotes);\\n    event PollClosed(uint indexed pollId, address closer);\\n\\n    modifier onlyActivePoll(uint _pollId) {\\n        require(polls[_pollId].isActive, \\\"Poll is not active\\\");\\n        _;\\n    }\\n\\n    function createPoll(string memory _question, string[] memory _options) public {\\n        require(_options.length > 1, \\\"Poll must have at least two options\\\");\\n\\n        Poll storage newPoll = polls[pollCount];\\n        newPoll.id = pollCount;\\n        newPoll.question = _question;\\n        newPoll.isActive = true;\\n        newPoll.creator = msg.sender;\\n        newPoll.votes = new uint[](_options.length);\\n\\n        pollOptions[pollCount] = _options;\\n\\n        emit PollCreated(pollCount, _question, msg.sender);\\n        pollCount++;\\n    }\\n\\n    function vote(uint _pollId, uint _optionIndex) public onlyActivePoll(_pollId) {\\n        Poll storage poll = polls[_pollId];\\n\\n        require(_optionIndex < pollOptions[_pollId].length, \\\"Invalid option index\\\");\\n        require(!poll.hasVoted[msg.sender], \\\"You have already voted\\\");\\n\\n        poll.votes[_optionIndex]++;\\n        poll.hasVoted[msg.sender] = true;\\n\\n        emit Voted(_pollId, _optionIndex, msg.sender, poll.votes[_optionIndex]);\\n    }\\n\\n    function getPoll(uint _pollId) public view returns (string memory, string[] memory, bool) {\\n        return (polls[_pollId].question, pollOptions[_pollId], polls[_pollId].isActive);\\n    }\\n\\n    function getPollVotes(uint _pollId) public view returns (uint[] memory) {\\n        return polls[_pollId].votes;\\n    }\\n\\n    function getPollOptions(uint _pollId) public view returns (string[] memory) {\\n        return pollOptions[_pollId];\\n    }\\n\\n    function closePoll(uint _pollId) public {\\n        require(polls[_pollId].creator == msg.sender, \\\"Only creator can close poll\\\");\\n        require(polls[_pollId].isActive, \\\"Poll is already closed\\\");\\n        polls[_pollId].isActive = false;\\n\\n        emit PollClosed(_pollId, msg.sender);\\n    }\\n\\n    function getAllPolls() public view returns (uint[] memory, string[] memory, bool[] memory) {\\n        uint[] memory pollIds = new uint[](pollCount);\\n        string[] memory questions = new string[](pollCount);\\n        bool[] memory statuses = new bool[](pollCount);\\n\\n        for (uint i = 0; i < pollCount; i++) {\\n            pollIds[i] = polls[i].id;\\n            questions[i] = polls[i].question;\\n            statuses[i] = polls[i].isActive;\\n        }\\n\\n        return (pollIds, questions, statuses);\\n    }\\n\\n    function getUserPolls(address _user) public view returns (uint[] memory, string[] memory, bool[] memory) {\\n        uint count = 0;\\n\\n        // Count how many polls the user has created\\n        for (uint i = 0; i < pollCount; i++) {\\n            if (polls[i].creator == _user) {\\n                count++;\\n            }\\n        }\\n\\n        // Create arrays for user's polls\\n        uint[] memory userPollIds = new uint[](count);\\n        string[] memory userQuestions = new string[](count);\\n        bool[] memory userStatuses = new bool[](count);\\n\\n        uint index = 0;\\n        for (uint i = 0; i < pollCount; i++) {\\n            if (polls[i].creator == _user) {\\n                userPollIds[index] = polls[i].id;\\n                userQuestions[index] = polls[i].question;\\n                userStatuses[index] = polls[i].isActive;\\n                index++;\\n            }\\n        }\\n\\n        return (userPollIds, userQuestions, userStatuses);\\n    }\\n}\\n\",\"keccak256\":\"0xddf67ce4643eec83b44b5186638c451bc7995eeafa230862b63508bf15d7dc2e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 19,
        "contract": "contracts/VotingPlatform.sol:VotingPlatform",
        "label": "pollCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 24,
        "contract": "contracts/VotingPlatform.sol:VotingPlatform",
        "label": "polls",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Poll)17_storage)"
      },
      {
        "astId": 29,
        "contract": "contracts/VotingPlatform.sol:VotingPlatform",
        "label": "pollOptions",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Poll)17_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct VotingPlatform.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)17_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Poll)17_storage": {
        "encoding": "inplace",
        "label": "struct VotingPlatform.Poll",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/VotingPlatform.sol:VotingPlatform",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5,
            "contract": "contracts/VotingPlatform.sol:VotingPlatform",
            "label": "question",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/VotingPlatform.sol:VotingPlatform",
            "label": "isActive",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 9,
            "contract": "contracts/VotingPlatform.sol:VotingPlatform",
            "label": "creator",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 12,
            "contract": "contracts/VotingPlatform.sol:VotingPlatform",
            "label": "votes",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 16,
            "contract": "contracts/VotingPlatform.sol:VotingPlatform",
            "label": "hasVoted",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}